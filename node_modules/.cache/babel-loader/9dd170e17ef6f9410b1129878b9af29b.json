{"ast":null,"code":"/*import classes from \"./TodoItem.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nconst TodoItem = (props) => {\r\n  let [checked, setCheck] = useState(false);\r\n  console.log(checked);\r\n  let handleDelete = () => {\r\n    fetch(\r\n      `https://todo-69230-default-rtdb.firebaseio.com/todos/${props.id}.json`,\r\n      {\r\n        method: \"DELETE\",\r\n      }\r\n    ).then(() => {\r\n      props.onFetch(Math.random());\r\n    });\r\n  };\r\n\r\n  let handleCheckBox = (event) => {\r\n    setCheck(event.target.checked);\r\n    localStorage.setItem(props.id, event.target.checked);\r\n  };\r\n  let date = new Date() > new Date(props.date);\r\n  let classDateExpired = date\r\n    ? `${classes.item} ${classes.expired}`\r\n    : `${classes.item}`;\r\n  let taskIsDone = localStorage.getItem(props.id)\r\n    ? `${classes.item} ${classes.taskDone}`\r\n    : `${classes.item}`;\r\n\r\n  return (\r\n    <li className={`${classDateExpired} ${taskIsDone}`}>\r\n      {!date && !localStorage.getItem(props.id) && (\r\n        <input\r\n          type=\"checkbox\"\r\n          className={classes.checkBox}\r\n          onChange={handleCheckBox}\r\n          id={props.id}\r\n        />\r\n      )}\r\n      <figure>\r\n\t@@ -43,16 +43,17 @@ const TodoItem = (props) => {\r\n        </blockquote>\r\n        <p>\r\n          {date && <span>expired-</span>}\r\n\r\n          {props.date}\r\n        </p>\r\n      </figure>\r\n      <div className={classes.buttons}>\r\n        <Link className=\"btn\" to={`/AllToDos/${props.id}`}>\r\n          View\r\n        </Link>\r\n        <div className=\"btn\" onClick={handleDelete}>\r\n          Delete\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n\r\n\r\n\r\n/*import classes from \"./TodoItem.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nconst TodoItem = (props) => {\r\n  let [checked, setCheck] = useState(false);\r\n  console.log(checked);\r\n  let handleDelete = () => {\r\n    fetch(\r\n      `https://todo-69230-default-rtdb.firebaseio.com/todos/${props.id}.json`,\r\n      {\r\n        method: \"DELETE\",\r\n      }\r\n    ).then(() => {\r\n      props.onFetch(Math.random());\r\n    });\r\n  };\r\n\r\n  let handleCheckBox = (event) => {\r\n    setCheck(true);\r\n  };\r\n  let date = new Date() > new Date(props.date);\r\n  let classDateExpired = date\r\n    ? `${classes.item} ${classes.expired}`\r\n    : `${classes.item}`;\r\n  let taskIsDone = checked\r\n    ? `${classes.item} ${classes.taskDone}`\r\n    : `${classes.item}`;\r\n\r\n  return (\r\n    <li className={`${classDateExpired} ${taskIsDone}`}>\r\n      {!date && !checked && (\r\n        <input\r\n          type=\"checkbox\"\r\n          className={classes.checkBox}\r\n          onChange={handleCheckBox}\r\n          id={props.id}\r\n        />\r\n      )}\r\n      <figure>\r\n        <figcaption>{props.author}</figcaption>\r\n        <blockquote>\r\n          <p>{props.text}</p>\r\n        </blockquote>\r\n        <p>\r\n          {date && <span>expired-</span>}\r\n\r\n          {props.date}\r\n        </p>\r\n      </figure>\r\n      <div className={classes.buttons}>\r\n        <Link className=\"btn\" to={`/AllToDos/${props.id}`}>\r\n          View\r\n        </Link>\r\n        <div className=\"btn\" onClick={handleDelete}>\r\n          Delete\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n*/","map":{"version":3,"names":[],"sources":["C:/Users/marik/Desktop/todo-1/src/components/todos/TodoItem.js"],"sourcesContent":["/*import classes from \"./TodoItem.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nconst TodoItem = (props) => {\r\n  let [checked, setCheck] = useState(false);\r\n  console.log(checked);\r\n  let handleDelete = () => {\r\n    fetch(\r\n      `https://todo-69230-default-rtdb.firebaseio.com/todos/${props.id}.json`,\r\n      {\r\n        method: \"DELETE\",\r\n      }\r\n    ).then(() => {\r\n      props.onFetch(Math.random());\r\n    });\r\n  };\r\n\r\n  let handleCheckBox = (event) => {\r\n    setCheck(event.target.checked);\r\n    localStorage.setItem(props.id, event.target.checked);\r\n  };\r\n  let date = new Date() > new Date(props.date);\r\n  let classDateExpired = date\r\n    ? `${classes.item} ${classes.expired}`\r\n    : `${classes.item}`;\r\n  let taskIsDone = localStorage.getItem(props.id)\r\n    ? `${classes.item} ${classes.taskDone}`\r\n    : `${classes.item}`;\r\n\r\n  return (\r\n    <li className={`${classDateExpired} ${taskIsDone}`}>\r\n      {!date && !localStorage.getItem(props.id) && (\r\n        <input\r\n          type=\"checkbox\"\r\n          className={classes.checkBox}\r\n          onChange={handleCheckBox}\r\n          id={props.id}\r\n        />\r\n      )}\r\n      <figure>\r\n\t@@ -43,16 +43,17 @@ const TodoItem = (props) => {\r\n        </blockquote>\r\n        <p>\r\n          {date && <span>expired-</span>}\r\n\r\n          {props.date}\r\n        </p>\r\n      </figure>\r\n      <div className={classes.buttons}>\r\n        <Link className=\"btn\" to={`/AllToDos/${props.id}`}>\r\n          View\r\n        </Link>\r\n        <div className=\"btn\" onClick={handleDelete}>\r\n          Delete\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n\r\n\r\n\r\n/*import classes from \"./TodoItem.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nconst TodoItem = (props) => {\r\n  let [checked, setCheck] = useState(false);\r\n  console.log(checked);\r\n  let handleDelete = () => {\r\n    fetch(\r\n      `https://todo-69230-default-rtdb.firebaseio.com/todos/${props.id}.json`,\r\n      {\r\n        method: \"DELETE\",\r\n      }\r\n    ).then(() => {\r\n      props.onFetch(Math.random());\r\n    });\r\n  };\r\n\r\n  let handleCheckBox = (event) => {\r\n    setCheck(true);\r\n  };\r\n  let date = new Date() > new Date(props.date);\r\n  let classDateExpired = date\r\n    ? `${classes.item} ${classes.expired}`\r\n    : `${classes.item}`;\r\n  let taskIsDone = checked\r\n    ? `${classes.item} ${classes.taskDone}`\r\n    : `${classes.item}`;\r\n\r\n  return (\r\n    <li className={`${classDateExpired} ${taskIsDone}`}>\r\n      {!date && !checked && (\r\n        <input\r\n          type=\"checkbox\"\r\n          className={classes.checkBox}\r\n          onChange={handleCheckBox}\r\n          id={props.id}\r\n        />\r\n      )}\r\n      <figure>\r\n        <figcaption>{props.author}</figcaption>\r\n        <blockquote>\r\n          <p>{props.text}</p>\r\n        </blockquote>\r\n        <p>\r\n          {date && <span>expired-</span>}\r\n\r\n          {props.date}\r\n        </p>\r\n      </figure>\r\n      <div className={classes.buttons}>\r\n        <Link className=\"btn\" to={`/AllToDos/${props.id}`}>\r\n          View\r\n        </Link>\r\n        <div className=\"btn\" onClick={handleDelete}>\r\n          Delete\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n*/\r\n"],"mappings},"metadata":{},"sourceType":"module"}