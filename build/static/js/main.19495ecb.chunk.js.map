{"version":3,"sources":["components/todos/TodoItem.module.css","components/todos/TodoForm.module.css","components/layouts/MainHeader.module.css","components/todos/HighlightedTodo.module.css","components/todos/TodoList.module.css","components/todos/NoTasksFound.module.css","components/UI/LoadingSpinner.module.css","components/UI/Card.module.css","components/layouts/Layout.module.css","components/todos/TodoItem.js","components/todos/TodoList.js","hooks/use-http.js","components/todos/NoTasksFound.js","lib/api.js","components/UI/LoadingSpinner.js","pages/AllToDos.js","components/UI/Card.js","firebase.js","components/todos/TodoForm.js","pages/NewToDo.js","pages/NotFound.js","components/todos/HighlightedTodo.js","pages/DetailToDo.js","components/layouts/MainHeader.js","components/layouts/Layout.js","App.js","index.js"],"names":["module","exports","TodoItem","props","useState","setCheck","date","Date","classDateExpired","classes","item","expired","taskIsDone","localStorage","getItem","id","taskDone","className","type","checkBox","onChange","event","target","checked","setItem","author","text","buttons","to","onClick","fetch","method","then","onFetch","Math","random","TodoList","list","quotes","map","quote","file","httpReducer","state","action","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","NoTasksFound","noquotes","FIREBASE_DOMAIN","getAllQuotes","response","json","ok","Error","key","transformedQuotes","quoteObj","push","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","body","JSON","stringify","headers","LoadingSpinner","spinner","AllToDos","deleting","setDelete","useEffect","length","Card","card","children","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","storage","getStorage","TodoForm","entered","setEntered","isValid","setValid","valueAuthor","setAuthor","valueText","setText","valueDate","setDate","valueFile","setFile","fileList","setList","listRef","ref","console","log","trim","when","form","onSubmit","preventDefault","onAddQuote","onFocus","isLoading","loading","control","htmlFor","value","rows","fileRef","uploadBytes","files","listAll","items","forEach","getDownloadURL","url","actions","disabled","NewToDo","history","useHistory","NotFound","HighlightedTodo","title","DetailQuotes","params","useParams","path","exact","href","rel","MainHeader","header","logo","nav","activeClassName","active","Layout","main","App","DetailToDo","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.19495ecb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__2dfSD\",\"expired\":\"TodoItem_expired__W2E_w\",\"checkBox\":\"TodoItem_checkBox__3gc1s\",\"taskDone\":\"TodoItem_taskDone__1ZTF4\",\"buttons\":\"TodoItem_buttons__Qo5ei\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"TodoForm_form__1KrLA\",\"loading\":\"TodoForm_loading__2VNa_\",\"control\":\"TodoForm_control__3DZzI\",\"actions\":\"TodoForm_actions__3h_TM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainHeader_header__A5yVr\",\"logo\":\"MainHeader_logo__3zG6G\",\"nav\":\"MainHeader_nav__3uA_K\",\"active\":\"MainHeader_active__1wUwS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedTodo_quote__4fb-D\",\"title\":\"HighlightedTodo_title__3-SPj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"TodoList_list__11knx\",\"sorting\":\"TodoList_sorting__121BZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoTasksFound_noquotes__1vD--\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2E1w8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__QwMvx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__1zauU\"};","import classes from \"./TodoItem.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nconst TodoItem = (props) => {\r\n  let [inputCheck, setCheck] = useState(false);\r\n  let handleDelete = () => {\r\n    fetch(\r\n      `https://todo-69230-default-rtdb.firebaseio.com/todos/${props.id}.json`,\r\n      {\r\n        method: \"DELETE\",\r\n      }\r\n    ).then(() => {\r\n      props.onFetch(Math.random());\r\n    });\r\n  };\r\n\r\n  let handleCheckBox = (event) => {\r\n    setCheck(event.target.checked);\r\n    localStorage.setItem(props.id, event.target.checked);\r\n  };\r\n  let date = new Date() > new Date(props.date);\r\n  let classDateExpired = date\r\n    ? `${classes.item} ${classes.expired}`\r\n    : `${classes.item}`;\r\n  let taskIsDone = localStorage.getItem(props.id)\r\n    ? `${classes.item} ${classes.taskDone}`\r\n    : `${classes.item}`;\r\n\r\n  return (\r\n    <li className={`${classDateExpired} ${taskIsDone}`}>\r\n      {!date && !localStorage.getItem(props.id) && (\r\n        <input\r\n          type=\"checkbox\"\r\n          className={classes.checkBox}\r\n          onChange={handleCheckBox}\r\n          id={props.id}\r\n        />\r\n      )}\r\n      <figure>\r\n        <figcaption>{props.author}</figcaption>\r\n        <blockquote>\r\n          <p>{props.text}</p>\r\n        </blockquote>\r\n        <p>\r\n          {date && <span>expired-</span>}\r\n\r\n          {props.date}\r\n        </p>\r\n      </figure>\r\n      <div className={classes.buttons}>\r\n        <Link className=\"btn\" to={`/AllToDos/${props.id}`}>\r\n          View\r\n        </Link>\r\n        <div className=\"btn\" onClick={handleDelete}>\r\n          Delete\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import { Fragment } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport classes from \"./TodoList.module.css\";\r\n\r\nconst TodoList = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <ul className={classes.list}>\r\n        {props.quotes.map((quote) => (\r\n          <TodoItem\r\n            key={quote.id}\r\n            id={quote.id}\r\n            date={quote.date}\r\n            author={quote.author}\r\n            text={quote.text}\r\n            onFetch={props.onFetch}\r\n            file={props.file}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import { useReducer, useCallback } from \"react\";\r\n\r\nfunction httpReducer(state, action) {\r\n  if (action.type === \"SEND\") {\r\n    return {\r\n      data: null,\r\n      error: null,\r\n      status: \"pending\",\r\n    };\r\n  }\r\n\r\n  if (action.type === \"SUCCESS\") {\r\n    return {\r\n      data: action.responseData,\r\n      error: null,\r\n      status: \"completed\",\r\n    };\r\n  }\r\n\r\n  if (action.type === \"ERROR\") {\r\n    return {\r\n      data: null,\r\n      error: action.errorMessage,\r\n      status: \"completed\",\r\n    };\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nfunction useHttp(requestFunction, startWithPending = false) {\r\n  const [httpState, dispatch] = useReducer(httpReducer, {\r\n    status: startWithPending ? \"pending\" : null,\r\n    data: null,\r\n    error: null,\r\n  });\r\n\r\n  const sendRequest = useCallback(\r\n    async function (requestData) {\r\n      dispatch({ type: \"SEND\" });\r\n      try {\r\n        const responseData = await requestFunction(requestData);\r\n        dispatch({ type: \"SUCCESS\", responseData });\r\n      } catch (error) {\r\n        dispatch({\r\n          type: \"ERROR\",\r\n          errorMessage: error.message || \"Something went wrong!\",\r\n        });\r\n      }\r\n    },\r\n    [requestFunction]\r\n  );\r\n\r\n  return {\r\n    sendRequest,\r\n    ...httpState,\r\n  };\r\n}\r\n\r\nexport default useHttp;\r\n","import classes from \"./NoTasksFound.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nconst NoTasksFound = () => {\r\n  return (\r\n    <div className={classes.noquotes}>\r\n      <p>No Tasks found!</p>\r\n      <Link className=\"btn\" to=\"/NewToDo\">\r\n        Add a Task\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoTasksFound;\r\n","const FIREBASE_DOMAIN = \"https://todo-69230-default-rtdb.firebaseio.com/\";\r\n\r\nexport async function getAllQuotes() {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/todos.json`);\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not fetch todos.\");\r\n  }\r\n\r\n  const transformedQuotes = [];\r\n\r\n  for (const key in data) {\r\n    const quoteObj = {\r\n      id: key,\r\n      ...data[key],\r\n    };\r\n\r\n    transformedQuotes.push(quoteObj);\r\n  }\r\n\r\n  return transformedQuotes;\r\n}\r\n\r\nexport async function getSingleQuote(quoteId) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/todos/${quoteId}.json`);\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not fetch todos.\");\r\n  }\r\n\r\n  const loadedQuote = {\r\n    id: quoteId,\r\n    ...data,\r\n  };\r\n\r\n  return loadedQuote;\r\n}\r\n\r\nexport async function addQuote(quoteData) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/todos.json`, {\r\n    method: \"POST\",\r\n    body: JSON.stringify(quoteData),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not create todo.\");\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport async function addComment(requestData) {\r\n  const response = await fetch(\r\n    `${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\r\n    {\r\n      method: \"POST\",\r\n      body: JSON.stringify(requestData.commentData),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    }\r\n  );\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not add comment.\");\r\n  }\r\n\r\n  return { commentId: data.name };\r\n}\r\n\r\nexport async function getAllComments(quoteId) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\r\n\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || \"Could not get comments.\");\r\n  }\r\n\r\n  const transformedComments = [];\r\n\r\n  for (const key in data) {\r\n    const commentObj = {\r\n      id: key,\r\n      ...data[key],\r\n    };\r\n\r\n    transformedComments.push(commentObj);\r\n  }\r\n\r\n  return transformedComments;\r\n}\r\n","import classes from \"./LoadingSpinner.module.css\";\r\n\r\nconst LoadingSpinner = () => {\r\n  return <div className={classes.spinner}></div>;\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import TodoList from \"../components/todos/TodoList\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport NoTasksFound from \"../components/todos/NoTasksFound\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\n\r\nlet AllToDos = () => {\r\n  let { sendRequest, status, data, error } = useHttp(getAllQuotes, true);\r\n  let [deleting, setDelete] = useState(\"\");\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest, deleting]);\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n  if (status === \"completed\" && (!data || data.length === 0)) {\r\n    return <NoTasksFound />;\r\n  } else {\r\n    return <TodoList quotes={data} onFetch={setDelete} />;\r\n  }\r\n};\r\nexport default AllToDos;\r\n","import classes from \"./Card.module.css\";\r\n\r\nconst Card = (props) => {\r\n  return <div className={classes.card}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\nimport \"firebase/storage\"; // <-\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBKXA6gXEcrhtUTd3dlTIWVxGMsqQegMHk\",\r\n  authDomain: \"todo-69230.firebaseapp.com\",\r\n  databaseURL: \"https://todo-69230-default-rtdb.firebaseio.com\",\r\n  projectId: \"todo-69230\",\r\n  storageBucket: \"todo-69230.appspot.com\",\r\n  messagingSenderId: \"1088954139570\",\r\n  appId: \"1:1088954139570:web:a73986997aaa0970955aab\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nexport let storage = getStorage(app);\r\n","import { useEffect, useState } from \"react\";\r\nimport { Prompt } from \"react-router-dom\";\r\nimport Card from \"../UI/Card\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport classes from \"./TodoForm.module.css\";\r\nimport { storage } from \"../../firebase\";\r\nimport { ref, listAll, getDownloadURL, uploadBytes } from \"firebase/storage\";\r\nconst TodoForm = (props) => {\r\n  let [entered, setEntered] = useState(false);\r\n  let [isValid, setValid] = useState(false);\r\n  let [valueAuthor, setAuthor] = useState(\"\");\r\n  let [valueText, setText] = useState(\"\");\r\n  let [valueDate, setDate] = useState(\"\");\r\n  let [valueFile, setFile] = useState(true);\r\n  let [fileList, setList] = useState([]);\r\n  let listRef = ref(storage, \"\");\r\n\r\n  function submitFormHandler(event) {\r\n    event.preventDefault();\r\n\r\n    props.onAddQuote({\r\n      author: valueAuthor,\r\n      text: valueText,\r\n      date: valueDate,\r\n      file: fileList,\r\n    });\r\n  }\r\n\r\n  let handleClick = () => {\r\n    setEntered(false);\r\n  };\r\n  let handleFocus = () => {\r\n    setEntered(true);\r\n  };\r\n  let handleAuthor = (event) => {\r\n    setAuthor(event.target.value);\r\n  };\r\n  let handleText = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  let handleDate = (event) => {\r\n    setDate(event.target.value);\r\n  };\r\n  let handleFile = (event) => {\r\n    setFile(false);\r\n    let fileRef = ref(storage, `${Math.random()}`);\r\n    uploadBytes(fileRef, event.target.files[0]);\r\n  };\r\n  let handleFileSubmit = (event) => {\r\n    setFile(true);\r\n    event.preventDefault();\r\n    listAll(listRef).then((response) => {\r\n      response.items.forEach((item) => {\r\n        getDownloadURL(item).then((url) => {\r\n          setList(url);\r\n        });\r\n      });\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    console.log(valueFile);\r\n    if (\r\n      valueAuthor.trim().length > 0 &&\r\n      valueText.trim().length > 0 &&\r\n      valueDate.trim().length > 0\r\n    ) {\r\n      setValid(true);\r\n    }\r\n  }, [valueAuthor, valueText, valueDate]);\r\n  return (\r\n    <Card>\r\n      <Prompt when={entered} message=\"Are you sure?\" />\r\n      <form\r\n        className={classes.form}\r\n        onSubmit={submitFormHandler}\r\n        onFocus={handleFocus}\r\n      >\r\n        {props.isLoading && (\r\n          <div className={classes.loading}>\r\n            <LoadingSpinner />\r\n          </div>\r\n        )}\r\n\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"author\">Title</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"author\"\r\n            value={valueAuthor}\r\n            onChange={handleAuthor}\r\n          />\r\n        </div>\r\n\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"date\">Date</label>\r\n          <input\r\n            type=\"date\"\r\n            id=\"date\"\r\n            value={valueDate}\r\n            onChange={handleDate}\r\n          />\r\n        </div>\r\n        <div className={classes.control}>\r\n          <label htmlFor=\"text\">Description</label>\r\n          <textarea\r\n            id=\"text\"\r\n            rows=\"5\"\r\n            value={valueText}\r\n            onChange={handleText}\r\n          ></textarea>\r\n        </div>\r\n\r\n        <div>\r\n          <input type=\"file\" id=\"file\" onChange={handleFile} />\r\n          <button onClick={handleFileSubmit}>Add a file</button>\r\n        </div>\r\n\r\n        <div className={classes.actions}>\r\n          <button\r\n            className={isValid && valueFile ? \"btn\" : \"btn invalid\"}\r\n            onClick={handleClick}\r\n            disabled={!isValid && !valueFile}\r\n          >\r\n            Add ToDo\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n","import TodoForm from \"../components/todos/TodoForm\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { addQuote } from \"../lib/api\";\r\nlet NewToDo = () => {\r\n  let history = useHistory();\r\n  let { sendRequest, status } = useHttp(addQuote);\r\n\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      history.push(\"/AllToDos\");\r\n    }\r\n  }, [status, history]);\r\n  let addQuotes = (data) => {\r\n    sendRequest(data);\r\n  };\r\n  return <TodoForm isLoading={status === \"pending\"} onAddQuote={addQuotes} />;\r\n};\r\nexport default NewToDo;\r\n","let NotFound = () => {\r\n  return <div className=\"centered\">Tasks not found</div>;\r\n};\r\nexport default NotFound;\r\n","import classes from \"./HighlightedTodo.module.css\";\r\n\r\nconst HighlightedTodo = (props) => {\r\n  return (\r\n    <figure className={classes.quote}>\r\n      <p className={classes.title}>{props.quote.author}</p>\r\n      <p>{props.quote.text}</p>\r\n      <figcaption>{props.quote.date}</figcaption>\r\n    </figure>\r\n  );\r\n};\r\n\r\nexport default HighlightedTodo;\r\n","import { useParams, Route, Switch, Link } from \"react-router-dom\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport NoTasksFound from \"../components/todos/NoTasksFound\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport HighlightedTodo from \"../components/todos/HighlightedTodo\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\nlet DetailQuotes = () => {\r\n  let { sendRequest, status, data, error } = useHttp(getSingleQuote, true);\r\n\r\n  let params = useParams();\r\n  useEffect(() => {\r\n    sendRequest(params.quoteId);\r\n  }, [sendRequest, params.quoteId]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centered focused\">{error}</p>;\r\n  }\r\n\r\n  if ((status === \"completed\" && !data) || data.length === 0) {\r\n    return <NoTasksFound />;\r\n  } else {\r\n    return (\r\n      <div>\r\n        <HighlightedTodo quote={data} />\r\n        <Switch>\r\n          <Route path={`/AllToDos/${data.id}/`} exact>\r\n            <div className=\"centered\">\r\n              {data.file ? (\r\n                <a\r\n                  href={data.file}\r\n                  className=\"btn\"\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                >\r\n                  File\r\n                </a>\r\n              ) : (\r\n                <p>File was not added</p>\r\n              )}\r\n            </div>\r\n          </Route>\r\n\r\n          <Route path={`/AllToDos/${data.id}/comments`}></Route>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default DetailQuotes;\r\n","import classes from \"./MainHeader.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nlet MainHeader = () => {\r\n  return (\r\n    <div className={classes.header}>\r\n      <div className={classes.logo}>ToDo</div>\r\n      <nav className={classes.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink to=\"/AllToDos\" activeClassName={classes.active}>\r\n              All Todos\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/NewToDo\" activeClassName={classes.active}>\r\n              Add a Todo\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\nexport default MainHeader;\r\n","import MainHeader from \"./MainHeader.js\";\r\nimport classes from \"./Layout.module.css\";\r\nlet Layout = (props) => {\r\n  return (\r\n    <div>\r\n      <MainHeader />\r\n      <main className={classes.main}>{props.children}</main>\r\n    </div>\r\n  );\r\n};\r\nexport default Layout;\r\n","import { Route, Switch, Redirect } from \"react-router-dom\";\nimport AllToDos from \"./pages/AllToDos\";\nimport NewToDo from \"./pages/NewToDo\";\nimport NotFound from \"./pages/NotFound\";\nimport DetailToDo from \"./pages/DetailToDo\";\nimport Layout from \"./components/layouts/Layout\";\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/AllToDos\" />\n        </Route>\n        <Route path=\"/AllToDos\" exact>\n          <AllToDos />\n        </Route>\n        <Route path=\"/NewToDo\" exact>\n          <NewToDo />\n        </Route>\n        <Route path=\"/AllToDos/:quoteId\">\n          <DetailToDo />\n        </Route>\n        <Route path=\"*\">\n          <NotFound />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n"],"sourceRoot":""}